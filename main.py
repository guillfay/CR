import subprocess
import os

# √âtape 1Ô∏è‚É£ : G√©n√©rer le fichier CNF (synth.py)
print("üîπ G√©n√©ration du fichier CNF...")
subprocess.run(["python", "synth.py"], check=True)

# Limite de tentatives
max_attempts = 50
attempt = 0
solution_found = False

solver_type = 'PB'

if solver_type=='SAT':
    while not solution_found and attempt < max_attempts:
        attempt += 1
        print(f"üîπ Tentative #{attempt} de r√©solution SAT avec Gophersat...")

        # Supprimer le fichier solution.txt pr√©c√©dent pour une nouvelle tentative propre
        if os.path.exists("solution.txt"):
            os.remove("solution.txt")

        # Ex√©cuter Gophersat pour r√©soudre le CNF
        gophersat_cmd = ["./gophersat_win64", "music.cnf"]
        with open("solution.txt", "w", encoding="utf-8") as solution_file:
            subprocess.run(gophersat_cmd, stdout=solution_file, check=True)

        # V√©rifier si une solution a √©t√© trouv√©e
        with open("solution.txt", "r", encoding="utf-8") as f:
            if "UNSATISFIABLE" in f.read():
                print(f"‚ùå Aucune solution trouv√©e par le SAT solver (tentative #{attempt}) !")
            else:
                solution_found = True
                print("‚úÖ Solution trouv√©e !")

        # R√©-g√©n√©rer le fichier CNF pour la prochaine tentative
        if not solution_found:
            print("üîÑ R√©initialisation du probl√®me CNF pour la prochaine tentative...")
            subprocess.run(["python", "synth.py"], check=True)

    # Si une solution a √©t√© trouv√©e, proc√©der aux √©tapes suivantes
    if solution_found:
        # √âtape 3Ô∏è‚É£ : G√©n√©rer le fichier MIDI (gen.py)
        print("üîπ G√©n√©ration du fichier MIDI...")
        subprocess.run(["python", "gen.py"], check=True)

        # √âtape 4Ô∏è‚É£ : Jouer le fichier MIDI (play.py)
        print("üîπ Lecture du fichier MIDI...")
        subprocess.run(["python", "play.py"], check=True)

        print("‚úÖ Processus termin√© avec succ√®s ! üé∂")
    else:
        print("‚ùå √âchec de la r√©solution SAT apr√®s 15 tentatives.")

if solver_type=='PB':

    # √âtape 1Ô∏è‚É£ : G√©n√©rer la solution avec Gurobi (synthPB.py)
    print("üîπ G√©n√©ration de la solution avec Gurobi (synthPB.py)...")
    subprocess.run(["python", "synthPB.py"], check=True)

    # V√©rifier que le fichier solution.txt a bien √©t√© g√©n√©r√© et qu'il contient une solution
    if os.path.exists("solution.txt"):
        with open("solution.txt", "r", encoding="utf-8") as f:
            content = f.read()
        if "v" in content:
            print("‚úÖ Solution trouv√©e !")
            
            # √âtape 2Ô∏è‚É£ : G√©n√©rer le fichier MIDI (gen.py)
            print("üîπ G√©n√©ration du fichier MIDI (gen.py)...")
            subprocess.run(["python", "gen.py"], check=True)

            # √âtape 3Ô∏è‚É£ : Jouer le fichier MIDI (play.py)
            print("üîπ Lecture du fichier MIDI (play.py)...")
            subprocess.run(["python", "play.py"], check=True)

            print("‚úÖ Processus termin√© avec succ√®s ! üé∂")
        else:
            print("‚ùå Le fichier solution.txt ne contient pas de solution valide.")
    else:
        print("‚ùå Le fichier solution.txt n'a pas √©t√© g√©n√©r√©.")